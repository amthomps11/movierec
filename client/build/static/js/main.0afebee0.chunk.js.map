{"version":3,"sources":["services/api-helper.js","components/CommentCard/index.js","components/Moviecard/Moviecard.js","components/FriendRequests/index.js","components/Friends/index.js","components/Homepage/index.js","components/ViewRecommendations/index.js","components/Login/index.js","components/Searchpage/index.js","components/Register/index.js","components/Userspage/index.js","components/Userprofile/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["JWT_TOKEN","localStorage","getItem","apiClient","axios","create","baseURL","headers","Authorization","showFavesOfUser","userId","a","get","resp","data","movies","loginUser","loginData","post","username","password","createUser","userData","createMovie","movieData","response","getMovieId","title","id","getMovie","movie_id","likeMovie","movieId","movieIn","forEach","movie","console","log","unlikeMovie","put","writeComment","commentData","user_id","comment","getComments","deleteComment","comment_id","delete","updateComment","text","body","getUsers","users","getUser","then","res","user","getFriends","friends","getFriendRequests","sendFriendRequest","friend_id","friend","user1id","user2id","confirmed","friendReq","acceptFriendRequest","getAllRecommendations","recs","CommentCard","props","componentDidMount","showComments","comments","setState","handleInput","e","preventDefault","value","target","input","handleComment","commentObj","state","toString","commentInput","handleDeleteComment","parseInt","parentElement","getAttribute","handleCommentInput","handleEditcomment","children","editInput","hanldeTriggerEdit","handleCommentInputChange","renderComments","map","className","key","isAuthed","onClick","this","onSubmit","onChange","React","Component","Moviecard","handleLike","movieObj","description","imgUrl","newMovie","handleUnlike","resetFaves","clasName","src","likeable","handleDelete","FriendRequests","getRequests","friendIds","friendId","Promise","all","values","temp","acceptRequest","renderRequests","Friends","renderFriends","to","Homepage","loggedIn","getFaves","faves","renderFaves","substring","Login","handleLoginButton","history","push","handleLogin","authData","decode","token","setItem","name","prevState","type","withRouter","require","config","API_KEY","Searchpage","fetchData","results","handleSearch","renderMovies","index","overview","poster_path","Register","handleRegisterButton","handleRegister","email","Userspage","setUsers","handleAddFriend","renderUsers","Userprofile","NavBar","handleLogoutButton","handleLogout","removeItem","isLoggedIn","activeClassName","path","component","exact","render","match","params","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0afebee0.chunk.js","sourcesContent":["import axios from \"axios\";\nconst BASE_URL = \"https://murmuring-atoll-42139.herokuapp.com/\";\n\nconst JWT_TOKEN = localStorage.getItem(\"token\");\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Authorization: `Bearer ${JWT_TOKEN}`\n  }\n});\n\nexport const showFavesOfUser = async userId => {\n  try {\n    const resp = await apiClient.get(`/users/${userId}`);\n    return resp.data.movies;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const loginUser = async loginData => {\n  try {\n    let resp = await apiClient.post(\n      `/auth/login?username=${loginData.username}&password=${loginData.password}`\n    );\n    return resp;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createUser = async userData => {\n  try {\n    let resp = await apiClient.post(`/users`, userData);\n    return resp;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createMovie = async movieData => {\n  try {\n    const response = await apiClient.post(\"/movies\", movieData);\n    return response.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getMovieId = async title => {\n  try {\n    const response = await apiClient.get(`/movies/title/?title=${title}`);\n    return response.data.id;\n  } catch (e) {\n    return \"nomovie\";\n  }\n};\n\nexport const getMovie = async movie_id => {\n  try {\n    const response = await apiClient.get(`/movies/${movie_id}`);\n    return response.data;\n  } catch (e) {\n    return \"nomovie\";\n  }\n};\n\nexport const likeMovie = async movieId => {\n  try {\n    let userId = localStorage.getItem(\"userId\");\n    const resp = await apiClient.get(`/users/${userId}`);\n    let movies = resp.data.movies;\n    let movieIn = false;\n    movies.forEach(movie => {\n      if (movie.id === movieId) {\n        movieIn = true;\n      }\n    });\n    if (!movieIn) {\n      const response = await apiClient.post(`/likes/${userId}/${movieId}`);\n      return response;\n    } else {\n      console.log(\"you already like that movie!\");\n    }\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const unlikeMovie = async movieId => {\n  try {\n    let userId = localStorage.getItem(\"userId\");\n\n    const response = await apiClient.put(\n      `/users/unlike?id=${userId}&movie_id=${movieId}`\n    );\n    return response;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const writeComment = async commentData => {\n  try {\n    commentData.user_id = localStorage.getItem(\"userId\");\n    const response = await apiClient.post(\"/comments\", {\n      comment: commentData\n    });\n    return response.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getComments = async (user_id, movie_id) => {\n  try {\n    const resp = await apiClient.get(\n      `/movies/comments?movie_id=${movie_id}&user_id=${user_id}`\n    );\n    return resp.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getComment = async (movie_id, comment_id) => {\n  try {\n    let user_id = await localStorage.getItem(\"userId\");\n    const resp = await apiClient.get(\n      `/movies/comment?movie_id=${movie_id}&user_id=${user_id}&comment_id=${comment_id}`\n    );\n    return resp.data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const deleteComment = async (movie_id, comment_id) => {\n  try {\n    let user_id = localStorage.getItem(\"userId\");\n    await apiClient.delete(\n      `/movies/comment_destroy?movie_id=${movie_id}&user_id=${user_id}&comment_id=${comment_id}`\n    );\n    return \"comment Deleted\";\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const updateComment = async (movie_id, comment_id, text) => {\n  try {\n    let user_id = localStorage.getItem(\"userId\");\n    await apiClient.put(\n      `/movies/comment_update?movie_id=${movie_id}&user_id=${user_id}&comment_id=${comment_id}`,\n      { comment: { body: `${text}` } }\n    );\n    return \"comment edited\";\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getUsers = async () => {\n  try {\n    let users = await apiClient.get(`/users`);\n    return users;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getUser = async user_id => {\n  try {\n    let user = await apiClient.get(`/users/${user_id}`).then(res => {\n      return res.data;\n    });\n    return user;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getFriends = async user_id => {\n  try {\n    let friends = await apiClient.get(`/users/get_friends?user_id=${user_id}`);\n    return friends;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getFriendRequests = async user_id => {\n  try {\n    let friends = await apiClient.get(\n      `/users/get_friend_requests?user_id=${user_id}`\n    );\n    return friends;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getFriend = async friend_id => {\n  try {\n    let friends = await apiClient.get(`/users/${friend_id}`);\n    return friends;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const sendFriendRequest = async friend_id => {\n  try {\n    let user_id = localStorage.getItem(\"userId\");\n    let friendReq = await apiClient.post(`/friends/`, {\n      friend: { user1id: friend_id, user2id: user_id, confirmed: false }\n    });\n    return friendReq;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const acceptFriendRequest = async friend_id => {\n  try {\n    let user_id = localStorage.getItem(\"userId\");\n    let friendReq = await apiClient.put(\n      `/friends/editspecificfriend?user1id=${user_id}&user2id=${friend_id}`,\n      {\n        friend: { user1id: user_id, user2id: friend_id, confirmed: true }\n      }\n    );\n    console.log(\"friend request accpeted!\");\n    return friendReq;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getRecommendationsFromFriend = async (user_id, friend_id) => {\n  try {\n    let user_id = localStorage.getItem(\"userId\");\n    let recs = await apiClient.get(\n      `/recomendations/get_specific_rec?user_id=${user_id}&friend_id=${friend_id}`\n    );\n    return recs;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const getAllRecommendations = async user_id => {\n  try {\n    let user_id = localStorage.getItem(\"userId\");\n    let recs = await apiClient.get(\n      `/recommendations/get_all_recs?user_id=${user_id}`\n    );\n    return recs.data;\n  } catch (e) {\n    throw e;\n  }\n};\n","import React from \"react\";\nimport {\n  deleteComment,\n  getComments,\n  writeComment,\n  updateComment\n} from \"../../services/api-helper\";\n\nimport \"./CommentCard.css\";\n\nclass CommentCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      commentInput: false,\n      editInput: false,\n      comments: []\n    };\n  }\n\n  componentDidMount = async () => {\n    if (this.props.showComments) {\n      let comments = await getComments(this.props.user_id, this.props.movie_id);\n      this.setState({ comments });\n    }\n  };\n\n  handleInput = async e => {\n    e.preventDefault();\n    let { value } = e.target;\n    this.setState({ input: value });\n  };\n\n  handleComment = async e => {\n    e.preventDefault();\n\n    let commentObj = {\n      body: this.state.input,\n      movie_id: this.props.movie_id.toString()\n    };\n    await writeComment(commentObj);\n    let comments = await getComments(this.props.user_id, this.props.movie_id);\n    this.setState({ comments, commentInput: false });\n  };\n\n  handleDeleteComment = async e => {\n    let id = parseInt(e.target.parentElement.getAttribute(\"id\"));\n    let movie_id = parseInt(e.target.parentElement.getAttribute(\"movie_id\"));\n\n    await deleteComment(movie_id, id);\n    let comments = await getComments(this.props.user_id, this.props.movie_id);\n    this.setState({ comments });\n  };\n\n  handleCommentInput = async e => {\n    this.setState({ commentInput: true });\n  };\n\n  handleEditcomment = async e => {\n    e.preventDefault();\n    let text = e.target.parentElement.children[0].value;\n    let id = parseInt(e.target.parentElement.getAttribute(\"id\"));\n    let movie_id = parseInt(e.target.parentElement.getAttribute(\"movie_id\"));\n    await updateComment(movie_id, id, text);\n    let comments = await getComments(this.props.user_id, this.props.movie_id);\n    this.setState({ comments, editInput: false });\n  };\n\n  hanldeTriggerEdit = e => {\n    this.setState({ editInput: true });\n  };\n\n  handleCommentInputChange = e => {\n    e.preventDefault();\n    return e.target.value;\n  };\n\n  renderComments = () => {\n    return this.state.comments.map(comment => {\n      return (\n        <div\n          className=\"comment-wrapper\"\n          key={comment.id}\n          id={comment.id}\n          movie_id={this.props.movie_id}\n        >\n          <div className=\"comment-body\">{comment.body}</div>\n          {!this.state.editInput && this.props.isAuthed ? (\n            <button className=\"edit-comment\" onClick={this.hanldeTriggerEdit}>\n              Edit\n            </button>\n          ) : null}\n          {this.props.isAuthed && this.state.editInput ? (\n            <form id={comment.id} movie_id={this.props.movie_id}>\n              <input></input>\n              <button className=\"edit-comment\" onClick={this.handleEditcomment}>\n                Edit\n              </button>\n            </form>\n          ) : null}\n          {this.props.isAuthed ? (\n            <button\n              className=\"delete-comment\"\n              onClick={this.handleDeleteComment}\n            >\n              x\n            </button>\n          ) : null}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"entire-comment-wrapper\">\n        {this.props.isAuthed ? (\n          <button\n            className=\"add-comment-trigger\"\n            onClick={this.handleCommentInput}\n          >\n            Add Comment\n          </button>\n        ) : null}\n\n        {this.props.isAuthed && this.state.commentInput ? (\n          <form onSubmit={this.handleComment}>\n            <input onChange={this.handleInput}></input>\n            <button onClick={this.handleCommentInput}>Write Comment</button>\n          </form>\n        ) : null}\n\n        {this.renderComments()}\n      </div>\n    );\n  }\n}\n\nexport default CommentCard;\n","import React from \"react\";\nimport {\n  createMovie,\n  likeMovie,\n  getMovieId,\n  getComments,\n  unlikeMovie\n} from \"../../services/api-helper\";\nimport CommentCard from \"../CommentCard\";\n\n//CSS\nimport \"./Moviecard.css\";\n\nclass Moviecard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\", comments: [] };\n  }\n\n  componentDidMount = async () => {\n    if (this.props.showComments) {\n      let comments = await getComments(this.props.user_id, this.props.movie_id);\n      await this.setState({ comments });\n    }\n  };\n\n  handleLike = async e => {\n    e.preventDefault();\n    let id = null;\n    let movieObj = {\n      movie: {\n        title: this.props.title,\n        description: this.props.description,\n        imgUrl: this.props.imgUrl\n      }\n    };\n\n    id = await getMovieId(this.props.title);\n    if (id === \"nomovie\") {\n      const newMovie = await createMovie(movieObj);\n      id = newMovie.id;\n    }\n    await likeMovie(id);\n  };\n\n  handleUnlike = async e => {\n    e.preventDefault();\n    await unlikeMovie(this.props.movie_id);\n    this.props.resetFaves();\n  };\n\n  handleInput = async e => {\n    e.preventDefault();\n    let { value } = e.target;\n    this.setState({ input: value });\n  };\n\n  render() {\n    return (\n      <div className=\"movie-card-wrapper\">\n        <h2 className=\"movie-title\">{this.props.title}</h2>\n        <div className=\"movie-content-wrapper\">\n          <div className=\"movie-description\">{this.props.description}</div>\n          <div>\n            <img clasName=\"movie-image\" src={this.props.imgUrl}></img>\n          </div>\n        </div>\n        {this.props.likeable ? (\n          <button className=\"like-button\" onClick={this.handleLike}>\n            Like\n          </button>\n        ) : (\n          <button className=\"dislike-button\" onClick={this.handleUnlike}>\n            Unlike\n          </button>\n        )}\n        {this.props.showComments ? (\n          <CommentCard\n            movie_id={this.props.movie_id}\n            user_id={this.props.user_id}\n            handleDelete={this.handleDeleteComment}\n            comments={this.state.comments}\n            isAuthed={this.props.isAuthed}\n            showComments={this.props.showComments}\n          ></CommentCard>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Moviecard;\n","import React from \"react\";\nimport {\n  getFriendRequests,\n  getUser,\n  acceptFriendRequest\n} from \"../../services/api-helper\";\n\nimport \"./FriendRequests.css\";\n\nclass FriendRequests extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { friendIds: [], friends: [] };\n  }\n\n  componentDidMount = async () => {\n    await this.getRequests();\n  };\n\n  getRequests = async () => {\n    let user_id = localStorage.getItem(\"userId\");\n    let resp = await getFriendRequests(user_id);\n    let friendIds = resp.data;\n    let friends = friendIds.map(async friendId => {\n      let friend = await getUser(friendId.user2id);\n      return friend;\n    });\n    let temp = await Promise.all(friends).then(function(values) {\n      return values;\n    });\n    friends = temp;\n    this.setState({ friendIds, friends });\n  };\n\n  acceptRequest = async friend_id => {\n    await acceptFriendRequest(friend_id);\n    await this.getRequests();\n  };\n\n  renderRequests = () => {\n    return this.state.friends.map(friend => {\n      return (\n        <div className=\"friend-requests-wrapper\" key={friend.id}>\n          <div className=\"friend-request-div\">{friend.username}</div>\n          <button\n            className=\"request-button\"\n            onClick={() => {\n              this.acceptRequest(friend.id);\n            }}\n          >\n            User Invites You To Follow Them\n          </button>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"friend-request-wrapper\">\n        <h2>Followee Requests</h2>\n        {this.renderRequests()}\n      </div>\n    );\n  }\n}\n\nexport default FriendRequests;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { getUser, getFriends } from \"../../services/api-helper\";\n\nimport \"./Friends.css\";\n\nclass Friends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { friendIds: [], friends: [] };\n  }\n\n  componentDidMount = async () => {\n    await this.getFriends();\n  };\n\n  getFriends = async () => {\n    let user_id = localStorage.getItem(\"userId\");\n    let resp = await getFriends(user_id);\n    let friendIds = resp.data;\n    let friends = friendIds.map(async friendId => {\n      let friend = await getUser(friendId.user2id);\n      return friend;\n    });\n    let temp = await Promise.all(friends).then(function(values) {\n      return values;\n    });\n    friends = temp;\n    this.setState({ friendIds, friends });\n  };\n\n  renderFriends = () => {\n    return this.state.friends.map(friend => {\n      return (\n        <div className=\"friend-div\" key={friend.id}>\n          <NavLink className=\"friend-link\" to={`/users/${friend.id}`}>\n            {friend.username}\n          </NavLink>\n        </div>\n      );\n    });\n  };\n  render() {\n    return (\n      <div className=\"friends-wrapper\">\n        <h2>People You Follow</h2>\n        {this.renderFriends()}\n      </div>\n    );\n  }\n}\n\nexport default Friends;\n","import React from \"react\";\nimport {\n  showFavesOfUser,\n  getFriendIds,\n  getFriends\n} from \"../../services/api-helper\";\nimport Moviecard from \"../Moviecard/Moviecard\";\nimport FriendRequests from \"../FriendRequests\";\nimport Friends from \"../Friends\";\nimport ViewReccomendations from \"../ViewRecommendations\";\n\n//Css\nimport \"../Moviecard/Moviecard.css\";\nimport \"./Homepage.css\";\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedIn: false, faves: [], friends: [] };\n  }\n\n  componentDidMount = async () => {\n    if (localStorage.getItem(\"userId\") == null) {\n      this.setState({ loggedIn: false });\n    } else {\n      this.setState({ loggedIn: true });\n    }\n    await this.getFaves();\n  };\n\n  getFaves = async () => {\n    let faves = await showFavesOfUser(localStorage.getItem(\"userId\"));\n    this.setState({ faves });\n  };\n\n  renderFaves = () => {\n    let user_id = localStorage.getItem(\"userId\");\n    return this.state.faves.map(movie => {\n      return (\n        <Moviecard\n          key={movie.id}\n          movie_id={movie.id}\n          title={movie.title}\n          description={`${movie.description.substring(0, 100)}...`}\n          imgUrl={movie.imgUrl}\n          isAuthed={true}\n          likeable={false}\n          showComments={true}\n          resetFaves={this.getFaves}\n          user_id={user_id}\n        ></Moviecard>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"own-profile-wrapper\">\n        <div className=\"friend-info-wrapper\">\n          {this.state.loggedIn ? (\n            <>\n              <Friends></Friends>\n              <FriendRequests></FriendRequests>\n            </>\n          ) : null}\n        </div>\n        <div className=\"movies-wrapper\">{this.renderFaves()}</div>\n        {/* <ViewReccomendations></ViewReccomendations> */}\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport Moviecard from \"../Moviecard/Moviecard\";\nimport { getAllRecommendations, getMovie } from \"../../services/api-helper\";\n\nclass ViewRecomendations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { recIds: [], recs: [] };\n  }\n\n  componentDidMount = async () => {\n    await this.getRecs();\n  };\n\n  getRecs = async () => {\n    let recIds = await getAllRecommendations();\n    let recs = recIds.map(async rec => {\n      return await getMovie(rec.movie_id);\n    });\n    let temp = await Promise.all(recs).then(function(values) {\n      return values;\n    });\n    recs = temp;\n    this.setState({ recIds, recs });\n  };\n\n  renderRecs = () => {\n    console.log(this.state.recs);\n    console.log(typeof this.state.recs);\n    return this.state.recs.map(movie => {\n      console.log(movie);\n      return (\n        <Moviecard\n          key={movie.id}\n          movie_id={movie.id}\n          title={movie.title}\n          description={movie.description.substring(0, 100)}\n          imgUrl={movie.imgUrl}\n          isAuthed={false}\n          likeable={true}\n          // showComments={true}\n          // resetFaves={this.getFaves}\n          // user_id={user_id}\n        ></Moviecard>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"recommendation-wrapper\">\n        The Recs\n        {this.renderRecs()}\n      </div>\n    );\n  }\n}\n\nexport default ViewRecomendations;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport decode from \"jwt-decode\";\nimport { loginUser } from \"../../services/api-helper\";\n\n//CSS\nimport \"./login.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authData: { username: \"\", password: \"\" }\n    };\n  }\n\n  handleLoginButton = () => {\n    this.props.history.push(\"/home\");\n  };\n\n  handleLogin = async e => {\n    e.preventDefault();\n    const userData = await loginUser(this.state.authData);\n    decode(userData.data.token);\n    localStorage.setItem(\"jwt\", userData.data.token);\n    localStorage.setItem(\"userId\", userData.data.userId);\n    this.handleLoginButton();\n  };\n\n  handleInput = async e => {\n    e.preventDefault();\n    let { name, value } = e.target;\n    this.setState(prevState => ({\n      authData: {\n        ...prevState.authData,\n        [name]: value\n      }\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"login-component-wrapper\">\n        <div className=\"login-container\">\n          <h2>login</h2>\n          <form onSubmit={this.handleLogin}>\n            <p>Username:</p>\n            <input\n              name=\"username\"\n              onChange={this.handleInput}\n              value={this.state.username}\n            />\n            <p>Password:</p>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleInput}\n              value={this.state.password}\n            />\n            <hr />\n            <button className=\"login-button\">Login</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport axios from \"axios\";\nimport Moviecard from \"../Moviecard/Moviecard\";\nimport \"./Searchpage.css\";\nrequire(\"dotenv\").config();\n\n//components\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_KEY = \"2aee743ec443e651b7c676b14cc46d1c\";\n\nclass Searchpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      movies: []\n    };\n  }\n\n  fetchData = async () => {\n    let resp = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.input}&page=1&include_adult=false`\n    );\n    await this.setState({ movies: [...resp.data.results] });\n  };\n\n  componentDidMount = async () => {};\n\n  handleInput = e => {\n    e.preventDefault();\n    let { value } = e.target;\n    this.setState({ input: value });\n  };\n\n  handleSearch = async e => {\n    e.preventDefault();\n    this.fetchData();\n  };\n\n  renderMovies = e => {\n    return this.state.movies.map((movie, index) => {\n      return (\n        <Moviecard\n          key={index}\n          title={movie.title}\n          description={movie.overview}\n          imgUrl={`http://image.tmdb.org/t/p/w185/${movie.poster_path}`}\n          likeable={true}\n          showComments={false}\n        ></Moviecard>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"search-wrapper\">\n        <div className=\"search-bar-wrapper\">\n          <input className=\"search-input\" onChange={this.handleInput}></input>\n          <button className=\"search-button\" onClick={this.handleSearch}>\n            Search\n          </button>\n        </div>\n        {this.state.movies !== [] ? this.renderMovies() : null}\n      </div>\n    );\n  }\n}\n\nexport default Searchpage;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { createUser } from \"../../services/api-helper\";\n\nimport \"./Register.css\";\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\"\n    };\n  }\n\n  handleRegisterButton = () => {\n    this.props.history.push(\"/home\");\n  };\n\n  handleRegister = async e => {\n    e.preventDefault();\n    await createUser({ user: this.state });\n  };\n\n  handleInput = async e => {\n    e.preventDefault();\n    let { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState.authData,\n      [name]: value\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"register-component-wrapper\">\n        <div className=\"register-container\">\n          <h2>Register</h2>\n          <hr />\n          <form onSubmit={this.handleRegister}>\n            <p>Username:</p>\n            <input\n              name=\"username\"\n              onChange={this.handleInput}\n              value={this.state.username}\n            />\n            <p>Email:</p>\n            <input\n              name=\"email\"\n              onChange={this.handleInput}\n              value={this.state.email}\n            />\n            <p>Password:</p>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleInput}\n              value={this.state.password}\n            />\n            <hr />\n            <button className=\"register-button\">Register</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Register);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { getUsers, sendFriendRequest } from \"../../services/api-helper\";\n\nimport \"./Userspage.css\";\nclass Userspage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { users: [] };\n  }\n\n  componentDidMount = async () => {\n    await this.setUsers();\n  };\n\n  setUsers = async () => {\n    let resp = await getUsers();\n    let users = resp.data;\n    await this.setState({ users });\n  };\n\n  handleAddFriend = async friend_id => {\n    await sendFriendRequest(friend_id);\n  };\n\n  renderUsers = () => {\n    return this.state.users.map(user => {\n      if (user.id !== parseInt(localStorage.getItem(\"userId\")))\n        return (\n          <div className=\"user-wrapper\" key={user.id}>\n            <h2>{user.username}</h2>\n            <button\n              onClick={() => {\n                this.handleAddFriend(user.id);\n              }}\n            >\n              Invite To Follow You\n            </button>\n          </div>\n        );\n    });\n  };\n  render() {\n    return <div className=\"userlist-wrapper\">{this.renderUsers()}</div>;\n  }\n}\n\nexport default Userspage;\n","import React from \"react\";\nimport { showFavesOfUser } from \"../../services/api-helper\";\nimport Moviecard from \"../Moviecard/Moviecard\";\n\nimport \"./Userprofile.css\";\nclass Userprofile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { faves: [] };\n  }\n\n  componentDidMount = async () => {\n    await this.getFaves();\n  };\n\n  getFaves = async () => {\n    let faves = await showFavesOfUser(this.props.id);\n    this.setState({ faves });\n  };\n\n  renderFaves = () => {\n    return this.state.faves.map(movie => {\n      return (\n        <Moviecard\n          key={movie.id}\n          movie_id={movie.id}\n          title={movie.title}\n          description={movie.description}\n          imgUrl={movie.imgUrl}\n          isAuthed={false}\n          likeable={true}\n          showComments={true}\n          user_id={this.props.id}\n        ></Moviecard>\n      );\n    });\n  };\n\n  render() {\n    return <div className=\"userProfile\">{this.renderFaves()}</div>;\n  }\n}\n\nexport default Userprofile;\n","import React from \"react\";\nimport { Route, NavLink, Switch, withRouter } from \"react-router-dom\";\n\n//Components\nimport Homepage from \"../Homepage\";\nimport Login from \"../Login\";\nimport Searchpage from \"../Searchpage\";\nimport Register from \"../Register\";\nimport Userspage from \"../Userspage\";\nimport Userprofile from \"../Userprofile\";\n\n//css\nimport \"./Navbar.css\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoggedIn: false };\n  }\n\n  handleLogoutButton = () => {\n    this.props.history.push(\"/login\");\n  };\n\n  handleLogout = async e => {\n    e.preventDefault();\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"userId\");\n    this.handleLogoutButton();\n  };\n\n  render() {\n    return (\n      <>\n        <ul className=\"navbar\">\n          <NavLink activeClassName=\"active\" className=\"navbar-link\" to=\"/home\">\n            Dashboard\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"navbar-link\" to=\"/login\">\n            Login\n          </NavLink>\n          <NavLink\n            activeClassName=\"active\"\n            className=\"navbar-link\"\n            to=\"/register\"\n          >\n            Register\n          </NavLink>\n          <NavLink\n            activeClassName=\"active\"\n            className=\"navbar-link\"\n            to=\"/search\"\n          >\n            Search\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"navbar-link\" to=\"/users\">\n            Users\n          </NavLink>\n          <button className=\"signout-button\" onClick={this.handleLogout}>\n            Signout\n          </button>\n        </ul>\n        <Switch>\n          <Route path=\"/home\" component={Homepage} />\n          <Route exact path=\"/login\" render={props => <Login />} />\n          <Route exact path=\"/register\" render={props => <Register />} />\n          <Route exact path=\"/search\" render={props => <Searchpage />} />\n          <Route exact path=\"/users\" render={props => <Userspage />} />\n          <Route\n            exact\n            path=\"/users/:id\"\n            render={props => (\n              <Userprofile {...props} id={props.match.params.id} />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","import React from \"react\";\nimport \"./App.css\";\n\n//Components\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedIn: false };\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Navbar></Navbar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}